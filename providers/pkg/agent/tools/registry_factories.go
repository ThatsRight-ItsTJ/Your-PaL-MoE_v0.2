// ABOUTME: Generated factory functions for creating tool instances from registry.
// ABOUTME: This file is auto-generated by toolgen and provides tool instantiation logic.
// Code generated by toolgen. DO NOT EDIT.

//go:build tools
// +build tools

package tools

import (
	data "github.com/lexlapax/go-llms/pkg/agent/builtins/tools/data"
	datetime "github.com/lexlapax/go-llms/pkg/agent/builtins/tools/datetime"
	feed "github.com/lexlapax/go-llms/pkg/agent/builtins/tools/feed"
	file "github.com/lexlapax/go-llms/pkg/agent/builtins/tools/file"
	math "github.com/lexlapax/go-llms/pkg/agent/builtins/tools/math"
	system "github.com/lexlapax/go-llms/pkg/agent/builtins/tools/system"
	web "github.com/lexlapax/go-llms/pkg/agent/builtins/tools/web"
	"github.com/lexlapax/go-llms/pkg/agent/domain"
)

// This file provides the actual factory implementations when tools are imported

func init() {
	// Override the placeholder factories with real implementations
	toolFactories["api_client"] = func() (domain.Tool, error) {
		return web.createAPIClientTool(), nil
	}
	toolFactories["calculator"] = func() (domain.Tool, error) {
		return math.Calculator(), nil
	}
	toolFactories["csv_process"] = func() (domain.Tool, error) {
		return data.CSVProcess(), nil
	}
	toolFactories["data_transform"] = func() (domain.Tool, error) {
		return data.DataTransform(), nil
	}
	toolFactories["datetime_calculate"] = func() (domain.Tool, error) {
		return datetime.DateTimeCalculate(), nil
	}
	toolFactories["datetime_compare"] = func() (domain.Tool, error) {
		return datetime.DateTimeCompare(), nil
	}
	toolFactories["datetime_convert"] = func() (domain.Tool, error) {
		return datetime.DateTimeConvert(), nil
	}
	toolFactories["datetime_format"] = func() (domain.Tool, error) {
		return datetime.DateTimeFormat(), nil
	}
	toolFactories["datetime_info"] = func() (domain.Tool, error) {
		return datetime.DateTimeInfo(), nil
	}
	toolFactories["datetime_now"] = func() (domain.Tool, error) {
		return datetime.DateTimeNow(), nil
	}
	toolFactories["datetime_parse"] = func() (domain.Tool, error) {
		return datetime.DateTimeParse(), nil
	}
	toolFactories["execute_command"] = func() (domain.Tool, error) {
		return system.ExecuteCommand(), nil
	}
	toolFactories["feed_aggregate"] = func() (domain.Tool, error) {
		return feed.FeedAggregate(), nil
	}
	toolFactories["feed_convert"] = func() (domain.Tool, error) {
		return feed.FeedConvert(), nil
	}
	toolFactories["feed_discover"] = func() (domain.Tool, error) {
		return feed.FeedDiscover(), nil
	}
	toolFactories["feed_extract"] = func() (domain.Tool, error) {
		return feed.FeedExtract(), nil
	}
	toolFactories["feed_fetch"] = func() (domain.Tool, error) {
		return feed.FeedFetch(), nil
	}
	toolFactories["feed_filter"] = func() (domain.Tool, error) {
		return feed.FeedFilter(), nil
	}
	toolFactories["file_delete"] = func() (domain.Tool, error) {
		return file.FileDelete(), nil
	}
	toolFactories["file_list"] = func() (domain.Tool, error) {
		return file.FileList(), nil
	}
	toolFactories["file_move"] = func() (domain.Tool, error) {
		return file.FileMove(), nil
	}
	toolFactories["file_read"] = func() (domain.Tool, error) {
		return file.ReadFile(), nil
	}
	toolFactories["file_search"] = func() (domain.Tool, error) {
		return file.FileSearch(), nil
	}
	toolFactories["file_write"] = func() (domain.Tool, error) {
		return file.WriteFile(), nil
	}
	toolFactories["get_environment_variable"] = func() (domain.Tool, error) {
		return system.GetEnvironmentVariable(), nil
	}
	toolFactories["get_system_info"] = func() (domain.Tool, error) {
		return system.GetSystemInfo(), nil
	}
	toolFactories["http_request"] = func() (domain.Tool, error) {
		return web.HTTPRequest(), nil
	}
	toolFactories["json_process"] = func() (domain.Tool, error) {
		return data.JSONProcess(), nil
	}
	toolFactories["process_list"] = func() (domain.Tool, error) {
		return system.ProcessList(), nil
	}
	toolFactories["web_fetch"] = func() (domain.Tool, error) {
		return web.WebFetch(), nil
	}
	toolFactories["web_scrape"] = func() (domain.Tool, error) {
		return web.WebScrape(), nil
	}
	toolFactories["web_search"] = func() (domain.Tool, error) {
		return web.WebSearch(), nil
	}
	toolFactories["xml_process"] = func() (domain.Tool, error) {
		return data.XMLProcess(), nil
	}
}
